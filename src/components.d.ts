/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { PodPdrApi } from "./api/PodPdrApi";
import { StoreKeys } from "./store/shared.store";
import { AbiCabApi } from "./api/AbiCabApi";
import { ClientiApi } from "./api/ClientiApi";
export { PodPdrApi } from "./api/PodPdrApi";
export { StoreKeys } from "./store/shared.store";
export { AbiCabApi } from "./api/AbiCabApi";
export { ClientiApi } from "./api/ClientiApi";
export namespace Components {
    interface AbiCabTable {
        "backendUrl": string;
    }
    interface BlacklistDashboard {
        "backendUrl": string;
        "singleCustomerCrmId": number;
    }
    interface BlacklistDashboardStyles {
    }
    interface BulkPodPdrModal {
        "api": PodPdrApi;
    }
    interface CustomersTable {
        "backendUrl": string;
    }
    interface DashboardBaseFilters {
        "storeKey": StoreKeys;
    }
    interface EditAbiCabModal {
        "api": AbiCabApi;
        "documentIds": any[];
    }
    interface EditCustomerModal {
        "api": ClientiApi;
        "documentIds": any[];
    }
    interface EditCustomersModal {
        "api": ClientiApi;
        "documentIds": any[];
    }
    interface EditPodPdrModal {
        "api": PodPdrApi;
        "documentIds": any[];
    }
    interface NewAbiCabModal {
        "api": AbiCabApi;
    }
    interface NewCustomerModal {
        "api": ClientiApi;
        "crmId": string;
    }
    interface NewPodPdrModal {
        "api": PodPdrApi;
    }
    interface PodPdrTable {
        "backendUrl": string;
    }
    interface SharedModal {
    }
    interface SharedSnackbar {
    }
    interface SharedTableSkeleton {
    }
    interface ShowCustomersPodPdrModal {
        "customers": any[];
    }
    interface SingleCustomerTable {
        "backendUrl": string;
        "odooId": string;
    }
}
declare global {
    interface HTMLAbiCabTableElement extends Components.AbiCabTable, HTMLStencilElement {
    }
    var HTMLAbiCabTableElement: {
        prototype: HTMLAbiCabTableElement;
        new (): HTMLAbiCabTableElement;
    };
    interface HTMLBlacklistDashboardElement extends Components.BlacklistDashboard, HTMLStencilElement {
    }
    var HTMLBlacklistDashboardElement: {
        prototype: HTMLBlacklistDashboardElement;
        new (): HTMLBlacklistDashboardElement;
    };
    interface HTMLBlacklistDashboardStylesElement extends Components.BlacklistDashboardStyles, HTMLStencilElement {
    }
    var HTMLBlacklistDashboardStylesElement: {
        prototype: HTMLBlacklistDashboardStylesElement;
        new (): HTMLBlacklistDashboardStylesElement;
    };
    interface HTMLBulkPodPdrModalElement extends Components.BulkPodPdrModal, HTMLStencilElement {
    }
    var HTMLBulkPodPdrModalElement: {
        prototype: HTMLBulkPodPdrModalElement;
        new (): HTMLBulkPodPdrModalElement;
    };
    interface HTMLCustomersTableElement extends Components.CustomersTable, HTMLStencilElement {
    }
    var HTMLCustomersTableElement: {
        prototype: HTMLCustomersTableElement;
        new (): HTMLCustomersTableElement;
    };
    interface HTMLDashboardBaseFiltersElement extends Components.DashboardBaseFilters, HTMLStencilElement {
    }
    var HTMLDashboardBaseFiltersElement: {
        prototype: HTMLDashboardBaseFiltersElement;
        new (): HTMLDashboardBaseFiltersElement;
    };
    interface HTMLEditAbiCabModalElement extends Components.EditAbiCabModal, HTMLStencilElement {
    }
    var HTMLEditAbiCabModalElement: {
        prototype: HTMLEditAbiCabModalElement;
        new (): HTMLEditAbiCabModalElement;
    };
    interface HTMLEditCustomerModalElement extends Components.EditCustomerModal, HTMLStencilElement {
    }
    var HTMLEditCustomerModalElement: {
        prototype: HTMLEditCustomerModalElement;
        new (): HTMLEditCustomerModalElement;
    };
    interface HTMLEditCustomersModalElement extends Components.EditCustomersModal, HTMLStencilElement {
    }
    var HTMLEditCustomersModalElement: {
        prototype: HTMLEditCustomersModalElement;
        new (): HTMLEditCustomersModalElement;
    };
    interface HTMLEditPodPdrModalElement extends Components.EditPodPdrModal, HTMLStencilElement {
    }
    var HTMLEditPodPdrModalElement: {
        prototype: HTMLEditPodPdrModalElement;
        new (): HTMLEditPodPdrModalElement;
    };
    interface HTMLNewAbiCabModalElement extends Components.NewAbiCabModal, HTMLStencilElement {
    }
    var HTMLNewAbiCabModalElement: {
        prototype: HTMLNewAbiCabModalElement;
        new (): HTMLNewAbiCabModalElement;
    };
    interface HTMLNewCustomerModalElement extends Components.NewCustomerModal, HTMLStencilElement {
    }
    var HTMLNewCustomerModalElement: {
        prototype: HTMLNewCustomerModalElement;
        new (): HTMLNewCustomerModalElement;
    };
    interface HTMLNewPodPdrModalElement extends Components.NewPodPdrModal, HTMLStencilElement {
    }
    var HTMLNewPodPdrModalElement: {
        prototype: HTMLNewPodPdrModalElement;
        new (): HTMLNewPodPdrModalElement;
    };
    interface HTMLPodPdrTableElement extends Components.PodPdrTable, HTMLStencilElement {
    }
    var HTMLPodPdrTableElement: {
        prototype: HTMLPodPdrTableElement;
        new (): HTMLPodPdrTableElement;
    };
    interface HTMLSharedModalElement extends Components.SharedModal, HTMLStencilElement {
    }
    var HTMLSharedModalElement: {
        prototype: HTMLSharedModalElement;
        new (): HTMLSharedModalElement;
    };
    interface HTMLSharedSnackbarElement extends Components.SharedSnackbar, HTMLStencilElement {
    }
    var HTMLSharedSnackbarElement: {
        prototype: HTMLSharedSnackbarElement;
        new (): HTMLSharedSnackbarElement;
    };
    interface HTMLSharedTableSkeletonElement extends Components.SharedTableSkeleton, HTMLStencilElement {
    }
    var HTMLSharedTableSkeletonElement: {
        prototype: HTMLSharedTableSkeletonElement;
        new (): HTMLSharedTableSkeletonElement;
    };
    interface HTMLShowCustomersPodPdrModalElement extends Components.ShowCustomersPodPdrModal, HTMLStencilElement {
    }
    var HTMLShowCustomersPodPdrModalElement: {
        prototype: HTMLShowCustomersPodPdrModalElement;
        new (): HTMLShowCustomersPodPdrModalElement;
    };
    interface HTMLSingleCustomerTableElement extends Components.SingleCustomerTable, HTMLStencilElement {
    }
    var HTMLSingleCustomerTableElement: {
        prototype: HTMLSingleCustomerTableElement;
        new (): HTMLSingleCustomerTableElement;
    };
    interface HTMLElementTagNameMap {
        "abi-cab-table": HTMLAbiCabTableElement;
        "blacklist-dashboard": HTMLBlacklistDashboardElement;
        "blacklist-dashboard-styles": HTMLBlacklistDashboardStylesElement;
        "bulk-pod-pdr-modal": HTMLBulkPodPdrModalElement;
        "customers-table": HTMLCustomersTableElement;
        "dashboard-base-filters": HTMLDashboardBaseFiltersElement;
        "edit-abi-cab-modal": HTMLEditAbiCabModalElement;
        "edit-customer-modal": HTMLEditCustomerModalElement;
        "edit-customers-modal": HTMLEditCustomersModalElement;
        "edit-pod-pdr-modal": HTMLEditPodPdrModalElement;
        "new-abi-cab-modal": HTMLNewAbiCabModalElement;
        "new-customer-modal": HTMLNewCustomerModalElement;
        "new-pod-pdr-modal": HTMLNewPodPdrModalElement;
        "pod-pdr-table": HTMLPodPdrTableElement;
        "shared-modal": HTMLSharedModalElement;
        "shared-snackbar": HTMLSharedSnackbarElement;
        "shared-table-skeleton": HTMLSharedTableSkeletonElement;
        "show-customers-pod-pdr-modal": HTMLShowCustomersPodPdrModalElement;
        "single-customer-table": HTMLSingleCustomerTableElement;
    }
}
declare namespace LocalJSX {
    interface AbiCabTable {
        "backendUrl"?: string;
    }
    interface BlacklistDashboard {
        "backendUrl"?: string;
        "singleCustomerCrmId"?: number;
    }
    interface BlacklistDashboardStyles {
    }
    interface BulkPodPdrModal {
        "api"?: PodPdrApi;
    }
    interface CustomersTable {
        "backendUrl"?: string;
    }
    interface DashboardBaseFilters {
        "storeKey"?: StoreKeys;
    }
    interface EditAbiCabModal {
        "api"?: AbiCabApi;
        "documentIds"?: any[];
    }
    interface EditCustomerModal {
        "api"?: ClientiApi;
        "documentIds"?: any[];
    }
    interface EditCustomersModal {
        "api"?: ClientiApi;
        "documentIds"?: any[];
    }
    interface EditPodPdrModal {
        "api"?: PodPdrApi;
        "documentIds"?: any[];
    }
    interface NewAbiCabModal {
        "api"?: AbiCabApi;
    }
    interface NewCustomerModal {
        "api"?: ClientiApi;
        "crmId"?: string;
    }
    interface NewPodPdrModal {
        "api"?: PodPdrApi;
    }
    interface PodPdrTable {
        "backendUrl"?: string;
    }
    interface SharedModal {
    }
    interface SharedSnackbar {
    }
    interface SharedTableSkeleton {
    }
    interface ShowCustomersPodPdrModal {
        "customers"?: any[];
    }
    interface SingleCustomerTable {
        "backendUrl"?: string;
        "odooId"?: string;
    }
    interface IntrinsicElements {
        "abi-cab-table": AbiCabTable;
        "blacklist-dashboard": BlacklistDashboard;
        "blacklist-dashboard-styles": BlacklistDashboardStyles;
        "bulk-pod-pdr-modal": BulkPodPdrModal;
        "customers-table": CustomersTable;
        "dashboard-base-filters": DashboardBaseFilters;
        "edit-abi-cab-modal": EditAbiCabModal;
        "edit-customer-modal": EditCustomerModal;
        "edit-customers-modal": EditCustomersModal;
        "edit-pod-pdr-modal": EditPodPdrModal;
        "new-abi-cab-modal": NewAbiCabModal;
        "new-customer-modal": NewCustomerModal;
        "new-pod-pdr-modal": NewPodPdrModal;
        "pod-pdr-table": PodPdrTable;
        "shared-modal": SharedModal;
        "shared-snackbar": SharedSnackbar;
        "shared-table-skeleton": SharedTableSkeleton;
        "show-customers-pod-pdr-modal": ShowCustomersPodPdrModal;
        "single-customer-table": SingleCustomerTable;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "abi-cab-table": LocalJSX.AbiCabTable & JSXBase.HTMLAttributes<HTMLAbiCabTableElement>;
            "blacklist-dashboard": LocalJSX.BlacklistDashboard & JSXBase.HTMLAttributes<HTMLBlacklistDashboardElement>;
            "blacklist-dashboard-styles": LocalJSX.BlacklistDashboardStyles & JSXBase.HTMLAttributes<HTMLBlacklistDashboardStylesElement>;
            "bulk-pod-pdr-modal": LocalJSX.BulkPodPdrModal & JSXBase.HTMLAttributes<HTMLBulkPodPdrModalElement>;
            "customers-table": LocalJSX.CustomersTable & JSXBase.HTMLAttributes<HTMLCustomersTableElement>;
            "dashboard-base-filters": LocalJSX.DashboardBaseFilters & JSXBase.HTMLAttributes<HTMLDashboardBaseFiltersElement>;
            "edit-abi-cab-modal": LocalJSX.EditAbiCabModal & JSXBase.HTMLAttributes<HTMLEditAbiCabModalElement>;
            "edit-customer-modal": LocalJSX.EditCustomerModal & JSXBase.HTMLAttributes<HTMLEditCustomerModalElement>;
            "edit-customers-modal": LocalJSX.EditCustomersModal & JSXBase.HTMLAttributes<HTMLEditCustomersModalElement>;
            "edit-pod-pdr-modal": LocalJSX.EditPodPdrModal & JSXBase.HTMLAttributes<HTMLEditPodPdrModalElement>;
            "new-abi-cab-modal": LocalJSX.NewAbiCabModal & JSXBase.HTMLAttributes<HTMLNewAbiCabModalElement>;
            "new-customer-modal": LocalJSX.NewCustomerModal & JSXBase.HTMLAttributes<HTMLNewCustomerModalElement>;
            "new-pod-pdr-modal": LocalJSX.NewPodPdrModal & JSXBase.HTMLAttributes<HTMLNewPodPdrModalElement>;
            "pod-pdr-table": LocalJSX.PodPdrTable & JSXBase.HTMLAttributes<HTMLPodPdrTableElement>;
            "shared-modal": LocalJSX.SharedModal & JSXBase.HTMLAttributes<HTMLSharedModalElement>;
            "shared-snackbar": LocalJSX.SharedSnackbar & JSXBase.HTMLAttributes<HTMLSharedSnackbarElement>;
            "shared-table-skeleton": LocalJSX.SharedTableSkeleton & JSXBase.HTMLAttributes<HTMLSharedTableSkeletonElement>;
            "show-customers-pod-pdr-modal": LocalJSX.ShowCustomersPodPdrModal & JSXBase.HTMLAttributes<HTMLShowCustomersPodPdrModalElement>;
            "single-customer-table": LocalJSX.SingleCustomerTable & JSXBase.HTMLAttributes<HTMLSingleCustomerTableElement>;
        }
    }
}
